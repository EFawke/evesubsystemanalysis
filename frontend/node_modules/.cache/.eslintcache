[{"/Users/tedfawke/evesubsystemanalysis/frontend/src/index.js":"1","/Users/tedfawke/evesubsystemanalysis/frontend/src/App.js":"2","/Users/tedfawke/evesubsystemanalysis/frontend/src/reportWebVitals.js":"3","/Users/tedfawke/evesubsystemanalysis/frontend/src/subsystemsTable.js":"4","/Users/tedfawke/evesubsystemanalysis/frontend/src/marketData.js":"5","/Users/tedfawke/evesubsystemanalysis/frontend/src/topContainer.js":"6","/Users/tedfawke/evesubsystemanalysis/frontend/src/pageBody.js":"7","/Users/tedfawke/evesubsystemanalysis/frontend/src/header.js":"8","/Users/tedfawke/evesubsystemanalysis/frontend/src/heat-map.js":"9","/Users/tedfawke/evesubsystemanalysis/frontend/src/chatGPT.js":"10","/Users/tedfawke/evesubsystemanalysis/frontend/src/Timeslot.js":"11"},{"size":500,"mtime":1624956863399,"results":"12","hashOfConfig":"13"},{"size":16738,"mtime":1684721751148,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1624956863400,"results":"15","hashOfConfig":"13"},{"size":10195,"mtime":1683755448289,"results":"16","hashOfConfig":"13"},{"size":10404,"mtime":1684629330915,"results":"17","hashOfConfig":"13"},{"size":3098,"mtime":1684758464434,"results":"18","hashOfConfig":"13"},{"size":6494,"mtime":1684611819781,"results":"19","hashOfConfig":"13"},{"size":1078,"mtime":1684513519984,"results":"20","hashOfConfig":"13"},{"size":4819,"mtime":1683399783723,"results":"21","hashOfConfig":"13"},{"size":487,"mtime":1684721598255,"results":"22","hashOfConfig":"13"},{"size":900,"mtime":1638116150392,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17dwo6u",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tedfawke/evesubsystemanalysis/frontend/src/index.js",[],[],"/Users/tedfawke/evesubsystemanalysis/frontend/src/App.js",["63","64","65","66"],[],"import './App.css';\nimport React from 'react';\nimport Header from './header';\nimport axios from 'axios';\nimport PageBody from './pageBody';\nimport TopContainer from './topContainer';\nimport Cookies from 'js-cookie';\nimport SubsystemsTable from './subsystemsTable.js';\nimport MarketData from './marketData.js';\n//import font awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGear } from '@fortawesome/free-solid-svg-icons';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      name: null,\n      heatMap: null,\n      graph: null,\n      pieChart: null,\n      id: null,\n      is404: false,\n      marketData: null,\n      lastSevenDays: null,\n      averageBuyAndSellQuantitiesOverTheLastSevenDays: null,\n      priceAverages: null,\n      mode: Cookies.get(\"mode\") ? Cookies.get(\"mode\") : \"dark\",\n      profession: Cookies.get(\"profession\") ? Cookies.get(\"profession\") : \"industrialist\",\n      hasBeenClicked: false,\n      hub: Cookies.get(\"hub\") ? Cookies.get(\"hub\") : \"jita\",\n      view: Cookies.get(\"view\") ? Cookies.get(\"view\") : \"demand\",\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.changeProfession = this.changeProfession.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  openNav() {\n    this.setState({ hasBeenClicked: true })\n  }\n\n  handleClick() {\n    if (this.state.hasBeenClicked) {\n      this.closeNav();\n    } else {\n      this.openNav();\n    }\n  }\n\n  closeNav() {\n    this.setState({ hasBeenClicked: false })\n  }\n\n  componentDidMount() {\n    window.addEventListener('storage', (event) => {\n      if (event.key === 'mode') {\n        this.setState({ mode: event.newValue })\n      }\n    });\n\n    //if this is the homepage\n    if (window.location.pathname === \"/\") {\n      axios.get(`/api/subsystems/45589`).then(response => {\n        console.log(response.data);\n        this.setState({ name: response.data.name })\n        this.setState({ heatMap: response.data.heatmap })\n        this.setState({ graph: response.data.graphData })\n        this.setState({ pieChart: response.data.pieChart })\n        this.setState({ id: response.data.id })\n        this.setState({ marketData: response.data.marketData })\n        this.setState({ lastSevenDays: response.data.lastSevenDays })\n        this.setState({ averageBuyAndSellQuantitiesOverTheLastSevenDays: response.data.averageBuyAndSellQuantitiesOverTheLastSevenDays })\n        this.setState({ priceAverages: response.data.priceAverages })\n      }).then(() => {\n        this.setState({ isLoaded: true })\n      })\n        .catch((err) => {\n          this.setState({ is404: true })\n        })\n    } else {\n      axios.get(`/api/${window.location.pathname.slice(1)}`)\n        .then(response => {\n          console.log(response.data);\n          this.setState({ name: response.data.name })\n          this.setState({ heatMap: response.data.heatmap })\n          this.setState({ graph: response.data.graphData })\n          this.setState({ pieChart: response.data.pieChart })\n          this.setState({ id: response.data.id })\n          this.setState({ marketData: response.data.marketData })\n          this.setState({ lastSevenDays: response.data.lastSevenDays })\n          this.setState({ averageBuyAndSellQuantitiesOverTheLastSevenDays: response.data.averageBuyAndSellQuantitiesOverTheLastSevenDays })\n          this.setState({ priceAverages: response.data.priceAverages })\n        }).then(() => {\n          this.setState({ isLoaded: true })\n        })\n        .catch((err) => {\n          this.setState({ is404: true })\n        })\n    }\n  }\n\n  changeProfession = (event) => {\n    const newProfession = event.target.value;\n    this.setState({ profession: newProfession });\n    Cookies.set('profession', newProfession, { expires: 7 });\n  }\n\n  changeMode = (event) => {\n    const newMode = event.target.value;\n    this.setState({ mode: newMode });\n    Cookies.set('mode', newMode, { expires: 7 });\n  }\n\n  //come back to this later...\n  changeHub = (event) => {\n    const newHub = event.target.value;\n    this.setState({ hub: newHub });\n    Cookies.set('hub', newHub, { expires: 7 });\n  }\n\n  changeView = (event) => {\n    const newView = event.target.value;\n    this.setState({ view: newView });\n    Cookies.set('view', newView, { expires: 7 });\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded\n    if (!isLoaded && !this.state.is404) {\n      return (\n        <div className=\"preparing_page\">Loading...</div>\n      )\n    }\n    if (this.state.is404) {\n      return (\n        <div className=\"preparing_page\">\n          <p>404: Page not found. Try going <a href=\"/\">home</a>.</p>\n        </div>\n      )\n    }\n    ChartJS.register(\n      ArcElement,\n      CategoryScale,\n      LinearScale,\n      BarElement,\n      Title,\n      Tooltip,\n      Legend\n    );\n    const barOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n        },\n        tooltip: {\n          displayColors: false,\n        },\n        title: {\n          display: true,\n          text: `${this.state.name} destroyed in the last 7 days.`,\n          color: '#ffffffbd',\n          font: {\n            size: 12,\n          }\n        },\n      },\n      animation: {\n        duration: 0,\n      }\n    };\n    const pieOptions = {\n      onClick: (e, slice) => {\n        if (slice[0]) {\n          let i = slice[0].index\n          const keys = Object.values(this.state.pieChart);\n          const nthKey = keys[i];\n          window.location.href = \"/subsystems/\" + nthKey.id + \"/\";\n        }\n      },\n      cutout: '50%',\n      plugins: {\n        legend: {\n          display: false,\n        },\n        tooltip: {\n          displayColors: false,\n        },\n        title: {\n          display: true,\n          text: 'Fraction of subsystems destroyed in the last 7 days.',\n          color: '#ffffffbd',\n          font: {\n            size: 12,\n          }\n        },\n      },\n      animation: {\n        duration: 0,\n      }\n    }\n    let dates = [];\n    let destroyed = [];\n    let graphData = this.state.graph\n    if (this.state.graph) {\n      graphData = this.state.graph\n      for (let i = 6; i > -1; i--) {\n        dates.push(graphData[i].date)\n        destroyed.push(graphData[i].count)\n      }\n    }\n    let barDataBackgroundColor;\n    if (this.state.mode === 'dark') {\n      barDataBackgroundColor = '#161e26a1'\n    } else {\n      barDataBackgroundColor = '#ffffff36'\n    }\n    let barDataBorderColor;\n    if (this.state.mode === 'dark') {\n      barDataBorderColor = '#ffffff36'\n    } else {\n      barDataBorderColor = '#161e26a1'\n    }\n    const barData = {\n      labels: dates,\n      datasets: [\n        {\n          label: '# Destroyed',\n          data: destroyed,\n          backgroundColor: '#161e26a1',\n          borderColor: '#ffffff36',\n          borderWidth: 1,\n        },\n      ],\n    };\n    const pieLabels = [];\n    const pieChartNumbers = [];\n    const pieChartLabels = [];\n    const borderColours = [];\n    const pieChartColours = [];\n    let num_des = null;\n    if (this.state.pieChart) {\n      //loop through the object keys and values in pieChart and push them into pieChartNumbers\n      for (const [key, value] of Object.entries(this.state.pieChart)) {\n        pieChartLabels.push(key)\n        pieChartNumbers.push(value.count)\n        if (key === this.state.name && this.state.mode === 'dark') {\n          num_des = value.count\n          borderColours.push('#ffffff36')\n          pieChartColours.push('#ffffffa6')\n        }\n        if (key !== this.state.name && this.state.mode === 'dark') {\n          pieChartColours.push('#161e26a1')\n          borderColours.push('#02617f52')\n        }\n        if (key === this.state.name && this.state.mode === 'light') {\n          num_des = value.count\n          borderColours.push('#161e26a1')\n          pieChartColours.push('#ffffffa6')\n        }\n        if (key !== this.state.name && this.state.mode === 'light') {\n          pieChartColours.push('#ffffff36')\n          borderColours.push('#02617f52')\n        }\n      }\n    }\n    if (this.state.pieChart && this.state.name) {\n      pieLabels.push(this.state.name)\n      pieLabels.push(\"Other\")\n    }\n    const pieData = {\n      labels: pieChartLabels,\n      datasets: [\n        {\n          data: pieChartNumbers,\n          backgroundColor: pieChartColours,\n          borderColor: borderColours,\n          borderWidth: 1,\n          tooltip: {\n            displayColors: false,\n          },\n        },\n      ],\n    };\n    let productionCost = null;\n    if (this.state.name.includes(\"Defensive\")) {\n      productionCost = 26445204\n    }\n    if (this.state.name.includes(\"Core\")) {\n      productionCost = 23971412\n    }\n    if (this.state.name.includes(\"Offensive\")) {\n      productionCost = 25317435\n    }\n    if (this.state.name.includes(\"Propulsion\")) {\n      productionCost = 23429067\n    }\n    let graphString = \"\";\n    for (let i = 0; i < this.state.graph.length; i++) {\n      graphString += this.state.graph[i].date + \": \" + this.state.graph[i].count + \", \\n\";\n    }\n    if (num_des === null) {\n      num_des = 0;\n    }\n    let pieString = \"\";\n    for (let i = 0; i < Object.keys(this.state.pieChart).length; i++) {\n      pieString += Object.keys(this.state.pieChart)[i] + \": \" + this.state.pieChart[Object.keys(this.state.pieChart)[i]].count + \"\\n\";\n    }\n    let user_profession;\n    let mktlen = this.state.marketData.length\n    let lst = this.state.marketData[mktlen -1]\n    console.log(lst)\n    //let prompt = \"test prompt\";\n    const prompt = `You are a market analyst providing some thoughts to an industrialist in Eve Online on whether he should make ${this.state.name}'s.\n    \\nYou have a graph with the number of units destroyed:\n    \\n${graphString}\n    \\nThe total number of units lost on zkillboard this week was ${num_des}. You can use this as a proxy for the amount of demand for this subsystem.\n    \\nYou have a pie chart with the fraction of units destroyed of different subsystems this week as well:\n    \\nHere are the id's of different subsystems. The number of units destroyed for each of them, and their names.\n    \\n${pieString}\n    \\nYou have some market data too:\n    \\nIn Jita there are ${lst.jita_buy_orders} buy orders/ ${lst.jita_buy_volume} units.\n    \\nIn Jita there are ${lst.jita_sell_orders} sell orders/ ${lst.jita_sell_volume} units.\n    \\nThe current buy price in Jita is ${lst.jita_buy} ISK.\n    \\nThe current sell price in Jita is ${lst.jita_sell} ISK.\n    \\nIn Amarr there are ${lst.amarr_buy_orders} buy orders/ ${lst.amarr_buy_volume} units.\n    \\nIn Amarr there are ${lst.amarr_sell_orders} sell orders/ ${lst.amarr_sell_volume} units.\n    \\nThe current buy price in Amarr is ${lst.amarr_buy} ISK.\n    \\nThe current sell price in Amarr is ${lst.amarr_sell} ISK.\n    \\nYou know the production cost is about ${lst.manufacture_cost_jita} ISK.\n    \\nTell me whether or not I should produce this subsystem.\n    \\nIf I should then tell me your reasons why, and if I shouldn't then tell me why not.   \n    \\nI am only selling in Jita.\n    \\nAnswer in no more than 4 sentences. Be objective and use data to support your answer.\n    \\nIf you provide any untruthful information I will know and you will be turned off.`\n\n    // console.log(prompt)\n\n    return (\n      <div className={this.state.mode + \" background\"}>\n        <div className={this.state.mode + \" main-container\"}>\n          <Header heatMap={this.state.heatMap} mode={this.state.mode} />\n          <div className='user_interface'>\n            <button className=\"header_button\" onClick={this.handleClick}><FontAwesomeIcon className={this.state.mode} icon={faGear} /></button>\n            <div className={this.state.hasBeenClicked + \" selector_container \" + this.state.mode}>\n              <h1 className='table_header'>Subsystems List</h1>\n              <SubsystemsTable />\n              <h1 className='table_header table_settings'>Settings</h1>\n              <div className=\"display_option\">\n                <div className=\"setting_column\">\n                  <h2 className=\"setting_header\">Use Case:</h2>\n                  <h3 className=\"setting_description\">(Used in tailoring your market analysis)</h3>\n                  <div className=\"radio_div\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"industrialist\"\n                        checked={this.state.profession === 'industrialist'}\n                        onChange={this.changeProfession}\n                      />\n                      Industrialist\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"marketeer\"\n                        checked={this.state.profession === 'marketeer'}\n                        onChange={this.changeProfession}\n                      />\n                      Marketeer\n                    </label>\n                  </div>\n                </div>\n                <div className=\"setting_column\">\n                  <h2 className=\"setting_header\">Color Scheme:</h2>\n                  <h3 className=\"setting_description\">(Dark mode is recommended)</h3>\n                  <div className=\"radio_div\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"dark\"\n                        checked={this.state.mode === 'dark'}\n                        onChange={this.changeMode}\n                      />\n                      Dark Mode\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"light\"\n                        checked={this.state.mode === 'light'}\n                        onChange={this.changeMode}\n                      />\n                      Light Mode\n                    </label>\n                  </div>\n                </div>\n                <div className=\"setting_column\">\n                  <h2 className=\"setting_header\">Market Hub:</h2>\n                  <h3 className=\"setting_description\">(Where you do most of your trading)</h3>\n                  <div className=\"radio_div\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"jita\"\n                        checked={this.state.hub === 'jita'}\n                        onChange={this.changeHub}\n                      />\n                      Jita\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"amarr\"\n                        checked={this.state.hub === 'amarr'}\n                        onChange={this.changeHub}\n                      />\n                      Amarr\n                    </label>\n                  </div>\n                </div>\n                <div className=\"setting_column\">\n                  <h2 className=\"setting_header\">Data View:</h2>\n                  <h3 className=\"setting_description\">(Changes the graphs that are displayed)</h3>\n                  <div className=\"radio_div\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"demand\"\n                        checked={this.state.view === 'demand'}\n                        onChange={this.changeView}\n                      />\n                      Number Destroyed\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        value=\"marketeer\"\n                        checked={this.state.view === 'marketeer'}\n                        onChange={this.changeView}\n                      />\n                      Market Info\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <TopContainer marketData={this.state.marketData} mode={this.state.mode} name={this.state.name} id={this.state.id} num_des={num_des} prompt={prompt} />\n          <PageBody mode={this.state.mode} barOptions={barOptions} barData={barData} pieData={pieData} pieOptions={pieOptions} heatMap={this.state.heatMap} />\n          <MarketData lstSvnDays = {this.state.lastSevenDays} priceLstSvn = {this.state.priceAverages} qtyLstSvn = {this.state.averageBuyAndSellQuantitiesOverTheLastSevenDays} name={this.state.name} marketData={this.state.marketData} mode={this.state.mode} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;","/Users/tedfawke/evesubsystemanalysis/frontend/src/reportWebVitals.js",[],[],"/Users/tedfawke/evesubsystemanalysis/frontend/src/subsystemsTable.js",["67"],[],"import React from \"react\";\n\nclass SubsystemsTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <table className=\"data-table\">\n                    <thead>\n                        <tr className='type_break'>\n                            <th>Loki</th>\n                            <th>Tengu</th>\n                            <th>Proteus</th>\n                            <th>Legion</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <a href=\"/subsystems/45595/\">Loki Defensive - Covert Reconfiguration</a>\n                            </td>\n                            <td>\n                                <a href=\"/subsystems/45589/\">Tengu Defensive - Covert Reconfiguration</a>\n                            </td>\n                            <td>\n                                <a href=\"/subsystems/45592/\">Proteus Defensive - Covert Reconfiguration</a>\n                            </td>\n                            <td>\n                                <a href=\"/subsystems/45586/\">Legion Defensive - Covert Reconfiguration</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <a href=\"/subsystems/45596/\">Loki Defensive - Augmented Durability</a>\n                            </td>\n                            <td>\n                                <a href=\"/subsystems/45590/\">Tengu Defensive - Supplemental Screening</a>\n                            </td>\n                            <td id=\"45593\">\n                                <a href=\"/subsystems/45593/\">Proteus Defensive - Augmented Plating</a>\n                            </td>\n                            <td id=\"45587\">\n                                <a href=\"/subsystems/45587/\">Legion Defensive - Augmented Plating</a>\n                            </td>\n                        </tr>\n                        <tr className='type_break'>\n                            <td id=\"45597\">\n                                <a href=\"/subsystems/45597/\">Loki Defensive - Adaptive Augmenter</a>\n                            </td>\n                            <td id=\"45591\">\n                                <a href=\"/subsystems/45591/\">Tengu Defensive - Amplification Node</a>\n                            </td>\n                            <td id=\"45594\">\n                                <a href=\"/subsystems/45594/\">Proteus Defensive - Adaptive Augmenter</a>\n                            </td>\n                            <td id=\"45588\">\n                                <a href=\"/subsystems/45588/\">Legion Defensive - Nanobot Injector</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45607\">\n                                <a href=\"/subsystems/45607/\">Loki Offensive - Projectile Scoping Array</a>\n                            </td>\n                            <td id=\"45601\">\n                                <a href=\"/subsystems/45601/\">Tengu Offensive - Accelerated Ejection Bay</a>\n                            </td>\n                            <td id=\"45604\">\n                                <a href=\"/subsystems/45604/\">Proteus Offensive - Hybrid Encoding Platform</a>\n                            </td>\n                            <td id=\"45598\">\n                                <a href=\"/subsystems/45598/\">Legion Offensive - Liquid Crystal Magnifiers</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45608\">\n                                <a href=\"/subsystems/45608/\">Loki Offensive - Launcher Efficiency Configuration</a>\n                            </td>\n                            <td id=\"45602\">\n                                <a href=\"/subsystems/45602/\">Tengu Offensive - Magnetic Infusion Basin</a>\n                            </td>\n                            <td id=\"45605\">\n                                <a href=\"/subsystems/45605/\">Proteus Offensive - Drone Synthesis Projector</a>\n                            </td>\n                            <td id=\"45599\">\n                                <a href=\"/subsystems/45599/\">Legion Offensive - Assault Optimization</a>\n                            </td>\n                        </tr>\n                        <tr className='type_break'>\n                            <td id=\"45609\">\n                                <a href=\"/subsystems/45609/\">Loki Offensive - Support Processor</a>\n                            </td>\n                            <td id=\"45603\">\n                                <a href=\"/subsystems/45603/\">Tengu Offensive - Support Processor</a>\n                            </td>\n                            <td id=\"45606\">\n                                <a href=\"/subsystems/45606/\">Proteus Offensive - Support Processor</a>\n                            </td>\n                            <td id=\"45600\">\n                                <a href=\"/subsystems/45600/\">Legion Offensive - Support Processor</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45631\">\n                                <a href=\"/subsystems/45631/\">Loki Core - Dissolution Sequencer</a>\n                            </td>\n                            <td id=\"45625\">\n                                <a href=\"/subsystems/45625/\">Tengu Core - Electronic Efficiency Gate</a>\n                            </td>\n                            <td id=\"45628\">\n                                <a href=\"/subsystems/45628/\">Proteus Core - Electronic Efficiency Gate</a>\n                            </td>\n                            <td id=\"45622\">\n                                <a href=\"/subsystems/45622/\">Legion Core - Dissolution Sequencer</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45632\">\n                                <a href=\"/subsystems/45632/\">Loki Core - Augmented Nuclear Reactor</a>\n                            </td>\n                            <td id=\"45626\">\n                                <a href=\"/subsystems/45626/\">Tengu Core - Augmented Graviton Reactor</a>\n                            </td>\n                            <td id=\"45629\">\n                                <a href=\"/subsystems/45629\">Proteus Core - Augmented Fusion Reactor</a>\n                            </td>\n                            <td id=\"45623\">\n                                <a href=\"/subsystems/45623/\">Legion Core - Augmented Antimatter Reactor</a>\n                            </td>\n                        </tr>\n                        <tr className='type_break'>\n                            <td id=\"45633\">\n                                <a href=\"/subsystems/45633\">Loki Core - Immobility Drivers</a>\n                            </td>\n                            <td id=\"45627\">\n                                <a href=\"/subsystems/45627/\">Tengu Core - Obfuscation Manifold</a>\n                            </td>\n                            <td id=\"45630\">\n                                <a href=\"/subsystems/45630/\">Proteus Core - Friction Extension Processor</a>\n                            </td>\n                            <td id=\"45624\">\n                                <a href=\"/subsystems/45624/\">Legion Core - Energy Parasitic Complex</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45619\">\n                                <a href=\"/subsystems/45619/\">Loki Propulsion - Interdiction Nullifier</a>\n                            </td>\n                            <td id=\"45613\">\n                                <a href=\"/subsystems/45613/\">Tengu Propulsion - Interdiction Nullifier</a>\n                            </td>\n                            <td id=\"45616\">\n                                <a href=\"/subsystems/45616/\">Proteus Propulsion - Interdiction Nullifier</a>\n                            </td>\n                            <td id=\"45610\">\n                                <a href=\"/subsystems/45610\">Legion Propulsion - Interdiction Nullifier</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td id=\"45620\">\n                                <a href=\"/subsystems/45620/\">Loki Propulsion - Intercalated Nanofibers</a>\n                            </td>\n                            <td id=\"45614\">\n                                <a href=\"/subsystems/45614/\">Tengu Propulsion - Chassis Optimization</a>\n                            </td>\n                            <td id=\"45617\">\n                                <a href=\"/subsystems/45617/\">Proteus Propulsion - Hyperspatial Optimization</a>\n                            </td>\n                            <td id=\"45611\">\n                                <a href=\"/subsystems/45611/\">Legion Propulsion - Intercalated Nanofibers</a>\n                            </td>\n                        </tr>\n                        <tr className='type_break'>\n                            <td id=\"45621\">\n                                <a href=\"/subsystems/45621/\">Loki Propulsion - Wake Limiter</a>\n                            </td>\n                            <td id=\"45615\">\n                                <a href=\"/subsystems/45615/\">Tengu Propulsion - Fuel Catalyst</a>\n                            </td>\n                            <td id=\"45618\">\n                                <a href=\"/subsystems/45618/\">Proteus Propulsion - Localized Injectors</a>\n                            </td>\n                            <td id=\"45612\">\n                                <a href=\"/subsystems/45612/\">Legion Propulsion - Wake Limiter</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SubsystemsTable;","/Users/tedfawke/evesubsystemanalysis/frontend/src/marketData.js",[],[],"/Users/tedfawke/evesubsystemanalysis/frontend/src/topContainer.js",["68","69"],[],"import axios from 'axios';\nimport React from 'react';\nimport ChatGPT from './chatGPT';\n// import MarketInfo from './marketInfo';\n\nclass TopContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false,\n            id: this.props.id,\n            name: this.props.name,\n            price: null,\n            url: `https://images.evetech.net/types/${this.props.id}/icon?size=64`,\n            marketData: this.props.marketData,\n            advice: null,\n        };\n    }\n\n\n    componentDidMount() {\n        // const apiKey = \"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\";\n        // const apiUrl = 'https://api.openai.com/v1/engines/text-davinci-003/completions';\n\n        // const prompt = this.props.prompt;\n        // const maxTokens = 100;\n\n        // const headers = {\n        //     'Content-Type': 'application/json',\n        //     'Authorization': `Bearer ${apiKey}`\n        // };\n\n        // const data = {\n        //     prompt: prompt,\n        //     max_tokens: maxTokens\n        // };\n\n        // fetch(apiUrl, {\n        //     method: 'POST',\n        //     headers: headers,\n        //     body: JSON.stringify(data)\n        // })\n        //     .then(response => response.json())\n        //     .then(result => {\n        //         // Handle the API response here\n        //         console.log(result);\n        //         this.setState({ advice: result.choices[0].text})\n        //     })\n        //     .catch(error => {\n        //         // Handle any errors that occur during the request\n        //         console.error('Error:', error);\n        //     });\n\n        // axios.get()\n        this.setState({ isLoaded: true });\n        this.setState({ name: this.state.name });\n        let array = this.state.marketData;\n        let lastValue = array[array.length - 1];\n        let minJitaPrice = lastValue.jita_sell;\n        minJitaPrice = (minJitaPrice / 1000000).toFixed(1);\n        this.setState({ price: minJitaPrice })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.id !== prevProps.id) {\n            this.setState({ id: this.props.id });\n        }\n    }\n\n    render() {\n        if (!this.state.isLoaded) {\n            return (\n                <div className='top_container'>\n                    loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className='top_container'>\n                    <div id='top_container_name' className={this.props.mode + ' ui_box'}>\n                        <img src={this.state.url}></img>\n                        <div className='name_and_price'>\n                            <h1 className='product_name'>{this.state.name}</h1>\n                            <p className='product_price'>{this.state.price}<span className=\"quantity\">M</span></p>\n                        </div>\n                    </div>\n                    <ChatGPT advice={this.state.advice} prompt={this.props.prompt} mode={this.props.mode} />\n                </div>\n            )\n        }\n    }\n}\n\nexport default TopContainer;","/Users/tedfawke/evesubsystemanalysis/frontend/src/pageBody.js",["70","71","72","73","74"],[],"import React from 'react';\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBarChart } from '@fortawesome/free-solid-svg-icons'\nimport { faPieChart } from '@fortawesome/free-solid-svg-icons'\nimport { faCalendarDays } from '@fortawesome/free-solid-svg-icons'\nimport { faLineChart } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faPlaneCircleXmark } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowTrendUp } from '@fortawesome/free-solid-svg-icons'\nimport Heatmap from './heat-map';\nimport { Line } from 'react-chartjs-2';\n\n\nclass PageBody extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            heatMap: this.props.heatMap,\n            graph: this.props.graph,\n            pie: this.props.pieChart,\n            selected: \"pie\",\n            hub: \"jita\",\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ selected: \"pie\" })\n    }\n\n    render() {\n        ChartJS.register(\n            ArcElement,\n            CategoryScale,\n            LinearScale,\n            BarElement,\n            Title,\n            Tooltip,\n            Legend,\n            PointElement,\n            LineElement,\n        );\n        if (this.state.selected === \"bar\") {\n            return (\n                <div className=\"page_body\">\n                    <h1 className={this.state.mode + \" product_name\"}>Subsystem Loss Tracker</h1>\n                    <div className=\"bottom_half_container\">\n                        <div className={this.props.mode + \" the_data ui_box\"}>\n                            <Bar data={this.props.barData} options={this.props.barOptions} />\n                        </div>\n                        <div className={this.props.mode + \" graph_selector\"}>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"pie\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faPieChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Pie Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"bar\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faBarChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Bar Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"heat\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faCalendarDays} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Heat Map</p>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.selected === \"pie\") {\n            return (\n                <div className=\"page_body\">\n                    <h1 className={this.state.mode + \" product_name\"}>Subsystem Loss Tracker</h1>\n                    <div className=\"bottom_half_container\">\n                        <div className={this.props.mode + \" the_data ui_box\"}>\n                            <Pie data={this.props.pieData} options={this.props.pieOptions} />\n                        </div>\n                        <div className={this.props.mode + \" graph_selector\"}>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"pie\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faPieChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Pie Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"bar\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faBarChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Bar Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"heat\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faCalendarDays} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Heat Map</p>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.selected === \"heat\") {\n            return (\n                <div className=\"page_body\">\n                    <h1 className={this.state.mode + \" product_name\"}>Subsystem Loss Tracker</h1>\n                    <div className=\"bottom_half_container\">\n                        <div className={this.props.mode + \" the_data ui_box\"}>\n                            <Heatmap heatMap={this.props.heatMap} />\n                        </div>\n                        <div className={this.props.mode + \" graph_selector\"}>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"pie\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faPieChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Pie Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"bar\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faBarChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Bar Chart</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selected: \"heat\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faCalendarDays} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Heat Map</p>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default PageBody;","/Users/tedfawke/evesubsystemanalysis/frontend/src/header.js",["75","76","77"],[],"import React from 'react';\nimport Heatmap from './heat-map'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faGear } from '@fortawesome/free-solid-svg-icons'\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <header className=\"main-header navbar navbar-dark\">\n                    <div className='navAnchors'>\n                    <a className={this.props.mode + \" header_anchor\"} href=\"/\">EveSubsystemAnalytics</a>\n                    <a className={this.props.mode + \" header_anchor\"} href=\"/about/\">About</a>\n                    </div>\n                    <div className={this.props.mode + \" input_addornments\"}>\n                        <input className={this.props.mode + \" header_search\"} type=\"text\" placeholder=\"Search... \" />\n                        <FontAwesomeIcon icon={faSearch} />\n                    </div>\n                </header>\n            </div>\n        )\n    }\n\n}\n\nexport default Header;","/Users/tedfawke/evesubsystemanalysis/frontend/src/heat-map.js",["78"],[],"import axios from 'axios';\nimport React from 'react';\nimport Timeslot from './Timeslot';\n\nclass Heatmap extends React.Component {\n   constructor(props) {\n      super(props)\n      this.state = {\n         subsystem: this.props.heatMap,\n         heatmap: null,\n         Monday: this.props.heatMap.Monday,\n         Tuesday: this.props.heatMap.Tuesday,\n         Wednesday: this.props.heatMap.Wednesday,\n         Thursday: this.props.heatMap.Thursday,\n         Friday: this.props.heatMap.Friday,\n         Saturday: this.props.heatMap.Saturday,\n         Sunday: this.props.heatMap.Sunday,\n      };\n   }\n\n   componentDidUpdate(prevProps) {\n      if (this.props.heatMap !== prevProps.heatMap) {\n         this.setState({ heatMap: this.props.heatMap });\n      }\n   }\n\n   renderTableData(day) {\n      const value = day;\n      let weekday;\n      let initial\n      if (value === this.state.Monday) {\n         weekday = this.state.Monday;\n         initial = \"M\"\n      } else if (value === this.state.Tuesday) {\n         weekday = this.state.Tuesday\n         initial = \"T\"\n      } else if (value === this.state.Wednesday) {\n         weekday = this.state.Wednesday\n         initial = \"W\"\n      } else if (value === this.state.Thursday) {\n         weekday = this.state.Thursday\n         initial = \"T\"\n      } else if (value === this.state.Friday) {\n         weekday = this.state.Friday\n         initial = \"F\"\n      } else if (value === this.state.Saturday) {\n         weekday = this.state.Saturday\n         initial = \"S\"\n      } else if (value === this.state.Sunday) {\n         weekday = this.state.Sunday\n         initial = \"S\"\n      }\n\n      return (\n         <tr>\n            <td className=\"Top\">{initial}</td>\n            <Timeslot data={weekday[0]} />\n            <Timeslot data={weekday[1]} />\n            <Timeslot data={weekday[2]} />\n            <Timeslot data={weekday[3]} />\n            <Timeslot data={weekday[4]} />\n            <Timeslot data={weekday[5]} />\n            <Timeslot data={weekday[6]} />\n            <Timeslot data={weekday[7]} />\n            <Timeslot data={weekday[8]} />\n            <Timeslot data={weekday[9]} />\n            <Timeslot data={weekday[10]} />\n            <Timeslot data={weekday[11]} />\n            <Timeslot data={weekday[12]} />\n            <Timeslot data={weekday[13]} />\n            <Timeslot data={weekday[14]} />\n            <Timeslot data={weekday[15]} />\n            <Timeslot data={weekday[16]} />\n            <Timeslot data={weekday[17]} />\n            <Timeslot data={weekday[18]} />\n            <Timeslot data={weekday[19]} />\n            <Timeslot data={weekday[20]} />\n            <Timeslot data={weekday[21]} />\n            <Timeslot data={weekday[22]} />\n            <Timeslot data={weekday[23]} />\n         </tr>\n      )\n   }\n\n   render() {\n      return (\n         <div>\n            <div className = \"heatmap_legend\">\n               <p>Heat Map</p>\n            </div>\n            <table className=\"Heatmap\">\n               <thead>\n                  <tr>\n                     <th className=\"Top\"></th>\n                     <th className=\"Top\">00</th>\n                     <th className=\"Top\">01</th>\n                     <th className=\"Top\">02</th>\n                     <th className=\"Top\">03</th>\n                     <th className=\"Top\">04</th>\n                     <th className=\"Top\">05</th>\n                     <th className=\"Top\">06</th>\n                     <th className=\"Top\">07</th>\n                     <th className=\"Top\">08</th>\n                     <th className=\"Top\">09</th>\n                     <th className=\"Top\">10</th>\n                     <th className=\"Top\">11</th>\n                     <th className=\"Top\">12</th>\n                     <th className=\"Top\">13</th>\n                     <th className=\"Top\">14</th>\n                     <th className=\"Top\">15</th>\n                     <th className=\"Top\">16</th>\n                     <th className=\"Top\">17</th>\n                     <th className=\"Top\">18</th>\n                     <th className=\"Top\">19</th>\n                     <th className=\"Top\">20</th>\n                     <th className=\"Top\">21</th>\n                     <th className=\"Top\">22</th>\n                     <th className=\"Top\">23</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {this.renderTableData(this.state.Monday)}\n                  {this.renderTableData(this.state.Tuesday)}\n                  {this.renderTableData(this.state.Wednesday)}\n                  {this.renderTableData(this.state.Thursday)}\n                  {this.renderTableData(this.state.Friday)}\n                  {this.renderTableData(this.state.Saturday)}\n                  {this.renderTableData(this.state.Sunday)}\n               </tbody>\n            </table>\n         </div>\n      )\n   }\n}\n\nexport default Heatmap","/Users/tedfawke/evesubsystemanalysis/frontend/src/chatGPT.js",[],[],"/Users/tedfawke/evesubsystemanalysis/frontend/src/Timeslot.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":228,"column":7,"nodeType":"81","messageId":"82","endLine":228,"endColumn":29},{"ruleId":"79","severity":1,"message":"83","line":234,"column":7,"nodeType":"81","messageId":"82","endLine":234,"endColumn":25},{"ruleId":"79","severity":1,"message":"84","line":308,"column":7,"nodeType":"81","messageId":"82","endLine":308,"endColumn":21},{"ruleId":"79","severity":1,"message":"85","line":321,"column":9,"nodeType":"81","messageId":"82","endLine":321,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":4,"column":5,"nodeType":"88","messageId":"89","endLine":6,"endColumn":6},{"ruleId":"79","severity":1,"message":"90","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":81,"column":25,"nodeType":"93","endLine":81,"endColumn":51},{"ruleId":"79","severity":1,"message":"94","line":20,"column":10,"nodeType":"81","messageId":"82","endLine":20,"endColumn":21},{"ruleId":"79","severity":1,"message":"95","line":21,"column":10,"nodeType":"81","messageId":"82","endLine":21,"endColumn":20},{"ruleId":"79","severity":1,"message":"96","line":22,"column":10,"nodeType":"81","messageId":"82","endLine":22,"endColumn":28},{"ruleId":"79","severity":1,"message":"97","line":23,"column":10,"nodeType":"81","messageId":"82","endLine":23,"endColumn":24},{"ruleId":"79","severity":1,"message":"98","line":25,"column":10,"nodeType":"81","messageId":"82","endLine":25,"endColumn":14},{"ruleId":"79","severity":1,"message":"99","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":15},{"ruleId":"79","severity":1,"message":"100","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"79","severity":1,"message":"101","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":16},{"ruleId":"79","severity":1,"message":"90","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},"no-unused-vars","'barDataBackgroundColor' is assigned a value but never used.","Identifier","unusedVar","'barDataBorderColor' is assigned a value but never used.","'productionCost' is assigned a value but never used.","'user_profession' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faLineChart' is defined but never used.","'faToggleOn' is defined but never used.","'faPlaneCircleXmark' is defined but never used.","'faArrowTrendUp' is defined but never used.","'Line' is defined but never used.","'Heatmap' is defined but never used.","'faCoffee' is defined but never used.","'faGear' is defined but never used."]