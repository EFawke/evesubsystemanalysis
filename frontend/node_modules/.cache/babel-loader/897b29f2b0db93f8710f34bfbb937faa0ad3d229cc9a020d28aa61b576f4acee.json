{"ast":null,"code":"var _jsxFileName = \"/Users/tedfawke/evesubsystemanalysis/frontend/src/topContainer.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport ChatGPT from './chatGPT';\n// import MarketInfo from './marketInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TopContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      id: this.props.id,\n      name: this.props.name,\n      price: null,\n      url: `https://images.evetech.net/types/${this.props.id}/icon?size=64`,\n      marketData: this.props.marketData,\n      advice: null\n    };\n  }\n  componentDidMount() {\n    const apiKey = \"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\";\n    const apiUrl = 'https://api.openai.com/v1/engines/text-davinci-003/completions';\n    const prompt = this.props.prompt;\n    const maxTokens = 100;\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    };\n    const data = {\n      prompt: prompt,\n      max_tokens: maxTokens\n    };\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      // Handle the API response here\n      console.log(result);\n      this.setState({\n        advice: result.choices[0].text\n      });\n    }).catch(error => {\n      // Handle any errors that occur during the request\n      console.error('Error:', error);\n    });\n\n    // axios.get()\n    this.setState({\n      isLoaded: true\n    });\n    this.setState({\n      name: this.state.name\n    });\n    let array = this.state.marketData;\n    let lastValue = array[array.length - 1];\n    let minJitaPrice = lastValue.jita_sell;\n    minJitaPrice = (minJitaPrice / 1000000).toFixed(1);\n    this.setState({\n      price: minJitaPrice\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.id !== prevProps.id) {\n      this.setState({\n        id: this.props.id\n      });\n    }\n  }\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top_container\",\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"top_container_name\",\n          className: this.props.mode + ' ui_box',\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_and_price\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"product_name\",\n              children: this.state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"product_price\",\n              children: [this.state.price, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quantity\",\n                children: \"M\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChatGPT, {\n          advice: this.state.advice,\n          prompt: this.props.prompt,\n          mode: this.props.mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default TopContainer;","map":{"version":3,"names":["axios","React","ChatGPT","jsxDEV","_jsxDEV","TopContainer","Component","constructor","props","state","isLoaded","id","name","price","url","marketData","advice","componentDidMount","apiKey","apiUrl","prompt","maxTokens","headers","data","max_tokens","fetch","method","body","JSON","stringify","then","response","json","result","console","log","setState","choices","text","catch","error","array","lastValue","length","minJitaPrice","jita_sell","toFixed","componentDidUpdate","prevProps","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","src"],"sources":["/Users/tedfawke/evesubsystemanalysis/frontend/src/topContainer.js"],"sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport ChatGPT from './chatGPT';\n// import MarketInfo from './marketInfo';\n\nclass TopContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false,\n            id: this.props.id,\n            name: this.props.name,\n            price: null,\n            url: `https://images.evetech.net/types/${this.props.id}/icon?size=64`,\n            marketData: this.props.marketData,\n            advice: null,\n        };\n    }\n\n\n    componentDidMount() {\n        const apiKey = \"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\";\n        const apiUrl = 'https://api.openai.com/v1/engines/text-davinci-003/completions';\n\n        const prompt = this.props.prompt;\n        const maxTokens = 100;\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiKey}`\n        };\n\n        const data = {\n            prompt: prompt,\n            max_tokens: maxTokens\n        };\n\n        fetch(apiUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then(result => {\n                // Handle the API response here\n                console.log(result);\n                this.setState({ advice: result.choices[0].text})\n            })\n            .catch(error => {\n                // Handle any errors that occur during the request\n                console.error('Error:', error);\n            });\n\n        // axios.get()\n        this.setState({ isLoaded: true });\n        this.setState({ name: this.state.name });\n        let array = this.state.marketData;\n        let lastValue = array[array.length - 1];\n        let minJitaPrice = lastValue.jita_sell;\n        minJitaPrice = (minJitaPrice / 1000000).toFixed(1);\n        this.setState({ price: minJitaPrice })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.id !== prevProps.id) {\n            this.setState({ id: this.props.id });\n        }\n    }\n\n    render() {\n        if (!this.state.isLoaded) {\n            return (\n                <div className='top_container'>\n                    loading...\n                </div>\n            )\n        } else {\n            return (\n                <div className='top_container'>\n                    <div id='top_container_name' className={this.props.mode + ' ui_box'}>\n                        <img src={this.state.url}></img>\n                        <div className='name_and_price'>\n                            <h1 className='product_name'>{this.state.name}</h1>\n                            <p className='product_price'>{this.state.price}<span className=\"quantity\">M</span></p>\n                        </div>\n                    </div>\n                    <ChatGPT advice={this.state.advice} prompt={this.props.prompt} mode={this.props.mode} />\n                </div>\n            )\n        }\n    }\n}\n\nexport default TopContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}