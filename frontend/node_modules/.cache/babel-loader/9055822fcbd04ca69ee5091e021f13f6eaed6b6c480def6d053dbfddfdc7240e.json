{"ast":null,"code":"var _jsxFileName = \"/Users/tedfawke/evesubsystemanalysis/frontend/src/marketData.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBarChart } from '@fortawesome/free-solid-svg-icons';\nimport { faLineChart } from '@fortawesome/free-solid-svg-icons';\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PageBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marketData: this.props.marketData,\n      selectedMarketGraph: \"prices\",\n      hub: \"jita\"\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      selectedMarketGraph: \"prices\"\n    });\n  }\n  render() {\n    if (this.props.view === \"demand\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n    const lastSevenDaysPrices = this.props.priceLstSvn;\n    const jitaSellPrices = [];\n    const jitaBuyPrices = [];\n    const jitaManufacturingCosts = [];\n    const amarrSellPrices = [];\n    const amarrBuyPrices = [];\n    const amarrManufacturingCosts = [];\n    const lastSevenDaysQuantities = this.props.qtyLstSvn;\n    const jitaSellQuantities = [];\n    const jitaBuyQuantities = [];\n    const amarrSellQuantities = [];\n    const amarrBuyQuantities = [];\n    let lineBuy;\n    let lineSell;\n    let lineManufacture;\n    let lineLabel;\n    let barBuy;\n    let barSell;\n\n    //loop through the last 7 days\n    for (let i = 0; i < Object.keys(lastSevenDaysPrices).length; i++) {\n      const vals = Object.values(lastSevenDaysPrices)[i];\n      jitaSellPrices.push(vals.sell);\n      jitaBuyPrices.push(vals.buy);\n      jitaManufacturingCosts.push(vals.manufacture_cost_jita);\n      amarrSellPrices.push(vals.amarr_sell);\n      amarrBuyPrices.push(vals.amarr_buy);\n      amarrManufacturingCosts.push(vals.manufacture_cost_amarr);\n    }\n    for (let i = 0; i < Object.keys(lastSevenDaysQuantities).length; i++) {\n      const vals = Object.values(lastSevenDaysQuantities)[i];\n      jitaSellQuantities.push(vals.sell);\n      jitaBuyQuantities.push(vals.buy);\n      amarrSellQuantities.push(vals.amarr_sell);\n      amarrBuyQuantities.push(vals.amarr_buy);\n    }\n    if (this.state.hub === \"jita\") {\n      lineLabel = \"Jita\";\n      lineBuy = jitaBuyPrices;\n      lineSell = jitaSellPrices;\n      lineManufacture = jitaManufacturingCosts;\n    } else {\n      lineLabel = \"Amarr\";\n      lineBuy = amarrBuyPrices;\n      lineSell = amarrSellPrices;\n      lineManufacture = amarrManufacturingCosts;\n    }\n    if (this.state.hub === \"jita\") {\n      barBuy = jitaBuyQuantities;\n      barSell = jitaSellQuantities;\n    } else {\n      barBuy = amarrBuyQuantities;\n      barSell = amarrSellQuantities;\n    }\n    const abbreviateLstSvnDays = this.props.lstSvnDays.map(day => {\n      const date = new Date(day);\n      const month = date.getMonth() + 1;\n      const dayOfMonth = date.getDate();\n      return `${month}/${dayOfMonth}`;\n    });\n    let priceLabels = window.innerWidth < 1000 ? abbreviateLstSvnDays : this.props.lstSvnDays;\n    const priceData = {\n      labels: priceLabels,\n      datasets: [{\n        label: `${lineLabel} Sell`,\n        data: lineSell,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: `${lineLabel} Buy`,\n        data: lineBuy,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\n      }, {\n        label: `${lineLabel} Materials Cost`,\n        data: lineManufacture,\n        borderColor: 'rgb(230,230,250)',\n        backgroundColor: 'rgb(230,230,250)'\n      }]\n    };\n    const quantityData = {\n      labels: this.props.lstSvnDays,\n      datasets: [{\n        label: `${lineLabel} Sell Orders`,\n        data: barSell,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderWidth: 1\n      }, {\n        label: `${lineLabel} Buy Orders`,\n        data: barBuy,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        borderWidth: 1\n      }]\n    };\n    const quantityOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          displayColors: false\n        },\n        title: {\n          display: true,\n          text: `Average daily buy and sell order volumes for ${this.props.name} in ${lineLabel}`,\n          color: '#ffffff',\n          font: {\n            size: 14\n          }\n        }\n      },\n      animation: {\n        duration: 0\n      }\n    };\n    const priceOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top',\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Average daily prices for ' + this.props.name + ' in ' + lineLabel,\n          color: '#ffffff',\n          font: {\n            size: 14\n          }\n        }\n      },\n      animation: {\n        duration: 0\n      }\n    };\n    ChartJS.register(ArcElement, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement);\n    if (this.state.selectedMarketGraph === \"prices\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page_body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom_half_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.props.mode + \" the_data ui_box\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: priceData,\n              options: priceOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.props.mode + \" graph_selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"highlighted graph_button\",\n              onClick: () => this.setState({\n                selectedMarketGraph: \"prices\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faLineChart,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Price Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"graph_button\",\n              onClick: () => this.setState({\n                selectedMarketGraph: \"quantities\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faBarChart,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Market Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"graph_button\",\n              onClick: () => {\n                //if this.state.hub is jita change to amarr and vice versa\n                if (this.state.hub === \"jita\") {\n                  this.setState({\n                    hub: \"amarr\"\n                  });\n                } else {\n                  this.setState({\n                    hub: \"jita\"\n                  });\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faToggleOn,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Trade Hub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this);\n    }\n    if (this.state.selectedMarketGraph === \"quantities\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page_body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom_half_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.props.mode + \" the_data ui_box\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: quantityData,\n              options: quantityOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.props.mode + \" graph_selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"graph_button\",\n              onClick: () => this.setState({\n                selectedMarketGraph: \"prices\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faLineChart,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Price Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"highlighted graph_button\",\n              onClick: () => this.setState({\n                selectedMarketGraph: \"quantities\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faBarChart,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Market Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"graph_button\",\n              onClick: () => {\n                //if this.state.hub is jita change to amarr and vice versa\n                if (this.state.hub === \"jita\") {\n                  this.setState({\n                    hub: \"amarr\"\n                  });\n                } else {\n                  this.setState({\n                    hub: \"jita\"\n                  });\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: \"icon_svg\",\n                icon: faToggleOn,\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"hide_before_hover\",\n                children: \"Trade Hub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default PageBody;","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","Bar","FontAwesomeIcon","faBarChart","faLineChart","faToggleOn","Line","jsxDEV","_jsxDEV","PageBody","Component","constructor","props","state","marketData","selectedMarketGraph","hub","componentDidMount","setState","render","view","fileName","_jsxFileName","lineNumber","columnNumber","lastSevenDaysPrices","priceLstSvn","jitaSellPrices","jitaBuyPrices","jitaManufacturingCosts","amarrSellPrices","amarrBuyPrices","amarrManufacturingCosts","lastSevenDaysQuantities","qtyLstSvn","jitaSellQuantities","jitaBuyQuantities","amarrSellQuantities","amarrBuyQuantities","lineBuy","lineSell","lineManufacture","lineLabel","barBuy","barSell","i","Object","keys","length","vals","values","push","sell","buy","manufacture_cost_jita","amarr_sell","amarr_buy","manufacture_cost_amarr","abbreviateLstSvnDays","lstSvnDays","map","day","date","Date","month","getMonth","dayOfMonth","getDate","priceLabels","window","innerWidth","priceData","labels","datasets","label","data","borderColor","backgroundColor","quantityData","borderWidth","quantityOptions","responsive","plugins","legend","display","tooltip","displayColors","title","text","name","color","font","size","animation","duration","priceOptions","position","register","className","children","mode","options","onClick","icon"],"sources":["/Users/tedfawke/evesubsystemanalysis/frontend/src/marketData.js"],"sourcesContent":["import React from 'react';\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    PointElement,\n    LineElement,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBarChart } from '@fortawesome/free-solid-svg-icons'\nimport { faLineChart } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { Line } from 'react-chartjs-2';\n\n\nclass PageBody extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            marketData: this.props.marketData,\n            selectedMarketGraph: \"prices\",\n            hub: \"jita\",\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ selectedMarketGraph: \"prices\" })\n    }\n\n    render() {\n        if(this.props.view === \"demand\"){\n            return (\n                <div></div>\n            )\n        }\n\n\n\n        const lastSevenDaysPrices = this.props.priceLstSvn\n        const jitaSellPrices = [];\n        const jitaBuyPrices = [];\n        const jitaManufacturingCosts = [];\n        const amarrSellPrices = [];\n        const amarrBuyPrices = [];\n        const amarrManufacturingCosts = [];\n        const lastSevenDaysQuantities = this.props.qtyLstSvn\n        const jitaSellQuantities = [];\n        const jitaBuyQuantities = [];\n        const amarrSellQuantities = [];\n        const amarrBuyQuantities = [];\n        let lineBuy;\n        let lineSell;\n        let lineManufacture;\n        let lineLabel;\n        let barBuy;\n        let barSell;\n\n        //loop through the last 7 days\n        for(let i = 0; i < Object.keys(lastSevenDaysPrices).length; i++) {\n            const vals = Object.values(lastSevenDaysPrices)[i]\n            jitaSellPrices.push(vals.sell)\n            jitaBuyPrices.push(vals.buy)\n            jitaManufacturingCosts.push(vals.manufacture_cost_jita)\n            amarrSellPrices.push(vals.amarr_sell)\n            amarrBuyPrices.push(vals.amarr_buy)\n            amarrManufacturingCosts.push(vals.manufacture_cost_amarr)\n        }\n        for(let i = 0; i < Object.keys(lastSevenDaysQuantities).length; i++) {\n            const vals = Object.values(lastSevenDaysQuantities)[i]\n            jitaSellQuantities.push(vals.sell)\n            jitaBuyQuantities.push(vals.buy)\n            amarrSellQuantities.push(vals.amarr_sell)\n            amarrBuyQuantities.push(vals.amarr_buy)\n        }\n        if (this.state.hub === \"jita\") {\n            lineLabel = \"Jita\"\n            lineBuy = jitaBuyPrices;\n            lineSell = jitaSellPrices;\n            lineManufacture = jitaManufacturingCosts;\n        } else {\n            lineLabel = \"Amarr\"\n            lineBuy = amarrBuyPrices;\n            lineSell = amarrSellPrices;\n            lineManufacture = amarrManufacturingCosts;\n        }\n        if (this.state.hub === \"jita\") {\n            barBuy = jitaBuyQuantities;\n            barSell = jitaSellQuantities;\n        } else {\n            barBuy = amarrBuyQuantities;\n            barSell = amarrSellQuantities;\n        }\n\n        const abbreviateLstSvnDays = this.props.lstSvnDays.map((day) => {\n            const date = new Date(day)\n            const month = date.getMonth() + 1;\n            const dayOfMonth = date.getDate();\n            return `${month}/${dayOfMonth}`\n        })\n\n        let priceLabels = window.innerWidth < 1000 ? abbreviateLstSvnDays : this.props.lstSvnDays\n\n        const priceData = {\n            labels: priceLabels,\n            datasets: [\n                {\n                    label: `${lineLabel} Sell`,\n                    data: lineSell,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                },\n                {\n                    label: `${lineLabel} Buy`,\n                    data: lineBuy,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                },\n                {\n                    label: `${lineLabel} Materials Cost`,\n                    data: lineManufacture,\n                    borderColor: 'rgb(230,230,250)',\n                    backgroundColor: 'rgb(230,230,250)',\n                },\n            ],\n        };\n        const quantityData = {\n            labels: this.props.lstSvnDays,\n            datasets: [\n                {\n                    label: `${lineLabel} Sell Orders`,\n                    data: barSell,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                    borderWidth: 1,\n                },\n                {\n                    label: `${lineLabel} Buy Orders`,\n                    data: barBuy,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                    borderWidth: 1,\n                },\n            ],\n        }\n        const quantityOptions = {\n            responsive: true,\n            plugins: {\n                legend: {\n                    display: false,\n                },\n                tooltip: {\n                    displayColors: false,\n                },\n                title: {\n                    display: true,\n                    text: `Average daily buy and sell order volumes for ${this.props.name} in ${lineLabel}`,\n                    color: '#ffffff',\n                    font: {\n                        size: 14,\n                    }\n                },\n            },\n            animation: {\n                duration: 0,\n            }\n        }\n        const priceOptions = {\n            responsive: true,\n            plugins: {\n                legend: {\n                    position: 'top',\n                    display: false,\n                },\n                title: {\n                    display: true,\n                    text: 'Average daily prices for ' + this.props.name + ' in ' + lineLabel,\n                    color: '#ffffff',\n                    font: {\n                        size: 14,\n                    }\n                },\n            },\n            animation: {\n                duration: 0,\n            }\n        };\n\n        ChartJS.register(\n            ArcElement,\n            CategoryScale,\n            LinearScale,\n            BarElement,\n            Title,\n            Tooltip,\n            Legend,\n            PointElement,\n            LineElement,\n        );\n\n        if (this.state.selectedMarketGraph === \"prices\") {\n            return (\n                <div className=\"page_body\">\n                    <div className=\"bottom_half_container\">\n                        <div className={this.props.mode + \" the_data ui_box\"}>\n                            <Line data={priceData} options={priceOptions} />\n                        </div>\n                        <div className={this.props.mode + \" graph_selector\"}>\n                            <button className=\"highlighted graph_button\" onClick={() => this.setState({ selectedMarketGraph: \"prices\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faLineChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Price Data</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selectedMarketGraph: \"quantities\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faBarChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Market Volume</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => {\n                                //if this.state.hub is jita change to amarr and vice versa\n                                if (this.state.hub === \"jita\") {\n                                    this.setState({ hub: \"amarr\" })\n                                } else {\n                                    this.setState({ hub: \"jita\" })\n                                }\n                            }}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faToggleOn} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Trade Hub</p>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        if (this.state.selectedMarketGraph === \"quantities\") {\n            return (\n                <div className=\"page_body\">\n                    <div className=\"bottom_half_container\">\n                        <div className={this.props.mode + \" the_data ui_box\"}>\n                            <Bar data={quantityData} options={quantityOptions} />\n                        </div>\n                        <div className={this.props.mode + \" graph_selector\"}>\n                            <button className=\"graph_button\" onClick={() => this.setState({ selectedMarketGraph: \"prices\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faLineChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Price Data</p>\n                            </button>\n                            <button className=\"highlighted graph_button\" onClick={() => this.setState({ selectedMarketGraph: \"quantities\" })}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faBarChart} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Market Volume</p>\n                            </button>\n                            <button className=\"graph_button\" onClick={() => {\n                                //if this.state.hub is jita change to amarr and vice versa\n                                if (this.state.hub === \"jita\") {\n                                    this.setState({ hub: \"amarr\" })\n                                } else {\n                                    this.setState({ hub: \"jita\" })\n                                }\n                            }}>\n                                <FontAwesomeIcon className=\"icon_svg\" icon={faToggleOn} size=\"lg\" />\n                                <p className=\"hide_before_hover\">Trade Hub</p>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default PageBody;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}