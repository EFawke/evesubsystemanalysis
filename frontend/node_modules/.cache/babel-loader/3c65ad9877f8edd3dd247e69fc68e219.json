{"ast":null,"code":"var _jsxFileName = \"/Users/tedfawke/rage-roll/frontend/src/weekdays/unexpandedComponents/unexpanded.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = 'http://localhost:5000';\n\nclass Unexpanded extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      axios.get('http://localhost:5000/api/esi/getNumKills').catch(error => error).then(response => {\n        this.setState({\n          numberOfKills: response\n        });\n      });\n    };\n\n    this.state = {\n      numberOfKills: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"noPad\",\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.numberOfKills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\n; // XPress.getSeries = () => {\n//     const url = `${baseUrl}/series`;\n//     return fetch(url).then(response => {\n//       if (!response.ok) {\n//         return new Promise(resolve => resolve([]));\n//       }\n//       return response.json().then(jsonResponse => {\n//         return jsonResponse.series.map(seriesItem => camelcaseKeys(seriesItem));\n//       });\n//     });\n//   };\n\nexport default Unexpanded;","map":{"version":3,"sources":["/Users/tedfawke/rage-roll/frontend/src/weekdays/unexpandedComponents/unexpanded.js"],"names":["React","axios","defaults","headers","get","Unexpanded","Component","constructor","props","handleClick","catch","error","then","response","setState","numberOfKills","state","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,6BAA3B,IAA4D,uBAA5D;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAedC,WAfc,GAeA,MAAM;AAChBR,MAAAA,KAAK,CAACG,GAAN,CAAU,2CAAV,EACCM,KADD,CACOC,KAAK,IAAIA,KADhB,EAECC,IAFD,CAEMC,QAAQ,IAAI;AACd,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAEF;AAAhB,SAAd;AACH,OAJD;AAKH,KArBa;;AAEd,SAAKG,KAAL,GAAa;AACTD,MAAAA,aAAa,EAAE;AADN,KAAb;AAGC;;AACDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAG,OAAf;AAAA,kBAAwB,KAAKT,KAAL,CAAWU;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAI,KAAKF,KAAL,CAAWD;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAI,KAAKN,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAf+B;;AAuBvC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = 'http://localhost:5000';\n\nclass Unexpanded extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            numberOfKills: null\n        };\n        }\n        render(){\n            return (\n                <div>\n                    <p className = 'noPad'>{this.props.name}</p>\n                    <p>{this.state.numberOfKills}</p>\n                    <button onClick = {this.handleClick}>click me</button>\n                </div>\n            )\n        }\n        handleClick = () => {\n            axios.get('http://localhost:5000/api/esi/getNumKills')\n            .catch(error => error)\n            .then(response => {\n                this.setState({numberOfKills: response})\n            })\n        };\n};\n\n// XPress.getSeries = () => {\n//     const url = `${baseUrl}/series`;\n//     return fetch(url).then(response => {\n//       if (!response.ok) {\n//         return new Promise(resolve => resolve([]));\n//       }\n//       return response.json().then(jsonResponse => {\n//         return jsonResponse.series.map(seriesItem => camelcaseKeys(seriesItem));\n//       });\n//     });\n//   };\n\nexport default Unexpanded;"]},"metadata":{},"sourceType":"module"}